1. 
Error: 		 Initializing paging causes tripplefault
Bug description: Paging table and directory were initialized wrong
Member:		 Chris  
Checkpoint#:	 Checkpoint 1
Fix:	         Fixed paging table and directory with correct mask

2.
Error: 		 Execute works with invalid commands
Bug description: The read_dentry_by_name command does not compare strlen of the two strings, hence it matches two unequal strings.
Member:		 Janish
Checkpoint#:	 Checkpoint 3
Fix:	         Fixed read_dentry_by_name function to compare the lengths of two strings and return -1 if they are unequal.

3.
Error: 		 Unexpected exceptions
Bug description: Execution of files with names larger than 32 characters was forcing exceptions
Member:		 Rohan
Checkpoint#:	 Checkpoint 3
Fix:	         Fixed with better input parsing and increasing the buffer size

4. 
Error: 		 Switching terminals would randomly display another terminal's content.
Bug description: Since paging is changed, virtual address 0xb8000 is mapped to a terminal's buffer in physical memory. This does not let us copy the correct memory while switching terminals.
Member:		 Chris/Janish
Checkpoint#:	 Checkpoint 5
Fix:	         Fixed by defaulting the paging structure before memcpy.

5. 
Error: 		 Output of commands in one terminal get displayed in another terminal.
Bug description: Since scheduling has been implemented, the scheduled terminal might get switched and execute the command from a common buffer in its shell.
Member:		 Rohan/Janish
Checkpoint#:	 Checkpoint 5
Fix:	         Fixed by having three separate terminal buffers and setting the terminal buffer from only the terminal that is being viewed.

6. 
Error: 		 pagefaults with extremely large file names in terminal
Bug description: The read dentry by name function did not protect against extremely large file names
Member:		 Janish  
Checkpoint#:	 Checkpoint 4
Fix:	         Added handler to check for extremely large file names 

7. 
Error: 	Backspacing in shell would erase the ece391shell> prompt. 	 
Bug description: Error in the way backspace was handled in the keyboard.c file
Member:		 Rohan  
Checkpoint#:	 Checkpoint 3
Fix:	         Ensured that every time a shell is started number of characters in keyboard buffer is 0 
8. 
Error: 	with capslock on when you would hit shift you would still get upper case characters 	 
Bug description: Error in the way capslock and shift was handled
Member:		 Rohan  
Checkpoint#:	 Checkpoint 2
Fix:	         Add an extra if condition in the code to handle the specific case

